{"version":3,"sources":["util.js","InfoBox.js","News.js","Map.js","Table.js","LineGraph.js","App.js","index.js"],"names":["casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","color","fillColor","fillOpacity","radius","Math","sqrt","Popup","className","style","backgroundImage","flag","backgroundSize","width","height","fontWeight","numeral","format","prettyPrintStat","stat","InfoBox","active","title","total","onClick","isRed","Card","CardContent","Typography","variant","News","Map","countries","zoom","console","log","TileLayer","url","attribution","Table","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","name","iso2","getCountriesData","onCountryChange","event","countryCode","target","FormControl","Select","onChange","MenuItem","todayCases","e","todayRecovered","todayDeaths","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13f14b46.chunk.js","sourcesContent":["import { Circle,Popup } from \"react-leaflet\";\r\nimport numeral from \"numeral\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    multiplier: 180,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    multiplier: 250,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    multiplier: 500,\r\n  },\r\n};\r\n\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n  sortedData.sort((a, b) => a.cases>b.cases ? -1:1);\r\n  return sortedData\r\n};\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})`,backgroundSize:\"cover\",width:\"150px\",height:\"100px\"}}\r\n          ></div>\r\n          <div style={{fontWeight:\"bolder\"}}>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n          </div>\r\n          </div>\r\n        \r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n\r\n\r\n  export const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";","import { Card ,CardContent,Typography} from '@material-ui/core'\r\nimport \"./InfoBox.css\"\r\nimport React from 'react'\r\nimport { prettyPrintStat } from './util';\r\n\r\nexport default function InfoBox({active,title,cases,total,onClick,isRed}) {\r\n    return (\r\n      <Card\r\n      onClick={onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\" \r\n      }`}\r\n      >\r\n        <CardContent>\r\n          {/* Title */}\r\n          <Typography className=\"infoBox__title\" variant=\"h6\">{title}</Typography>\r\n          {/* cases */}\r\n          <h2 className='infoBox__cases '>{prettyPrintStat(cases)}</h2>\r\n          {/* Total */}\r\n          <Typography className=\"info__total\">{prettyPrintStat(total)}</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport {GridList,GridListTile} from \"@material-ui/core\"\r\nimport \"./News.css\"\r\n\r\nfunction News() {\r\n    const [newsList, setNewsList] = useState([]);\r\n\r\n    // const [newList, setNewList] = useState([1,2,3,4,4,4,4,4,4,4,4,4,4,4,3,2,32332,,3,2,32,23,2,3])\r\nuseEffect(() => {\r\n    fetch(\"https://newsapi.org/v2/everything?q=corona&sortBy=popularity&apiKey=4eb5637541504734bc95a3a11c9634f4\")\r\n    .then(response=>response.json())\r\n    .then(data=>{\r\n        setNewsList(data[\"articles\"]);\r\n    })\r\n    .catch(err=>console.log(err))\r\n}, [])\r\n\r\n    if(newsList.length==0)\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n    else\r\n    return (\r\n    <ul className=\"news__list\">\r\n        {newsList.map((news)=><li>{news[\"title\"]} <a target=\"_blank\" href={news[\"url\"]}>read more...</a></li>)}\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from \"react\"\r\nimport \"./Map.css\"\r\nimport {Map as LeafletMap,TileLayer} from 'react-leaflet'\r\nimport { showDataOnMap } from \"./util\"\r\nimport {Circle} from \"leaflet\"\r\n\r\nfunction Map({countries,casesType,center,zoom}) {\r\n  console.log(casesType)\r\n  return (\r\n   <div className=\"map\">\r\n     <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />  \r\n        {showDataOnMap(countries,casesType)}\r\n     </LeafletMap>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Map\r\n","import React from \"react\";\r\nimport \"./Table.css\"\r\nimport { prettyPrintStat } from \"./util\";\r\n\r\nexport default function Table({ countries }) {\r\n  return (\r\n    <div className=\"table\">\r\n      {countries.map(({ country, cases }) => (\r\n        <tr>\r\n          <td>{country}</td>\r\n          <td>\r\n            <strong>{prettyPrintStat(cases)}</strong>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport \"leaflet/dist/leaflet.css\"\r\nimport News from \"./News\"\r\nimport Map from \"./Map\"\r\nimport Table from \"./Table\"\r\nimport {sortData} from \"./util\"\r\nimport LineGraph from \"./LineGraph\"\r\n\r\n\r\n\r\nfunction App() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [country, setCountry] = useState(\"worldwide\");\r\n  const [countryInfo,setCountryInfo]=useState(\" \");\r\n  const [tableData,setTableData]=useState([]);\r\n  const [mapCenter,setMapCenter]=useState([20,-10])\r\n  const [mapZoom, setMapZoom] = useState(2)\r\n  const [mapCountries, setMapCountries] = useState([])\r\n  const [casesType, setCasesType] = useState(\"cases\")\r\n\r\n  useEffect(()=>{\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n    .then(response=>response.json())\r\n    .then(data=>{setCountryInfo(data)})\r\n    \r\n  },[])\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n          const sortedData=sortData(data)\r\n          setCountries(countries);\r\n          setTableData(sortedData);\r\n          setMapCountries(data)\r\n          // console.log(typeof sortedData)\r\n          // console.log(sortedData)\r\n        });\r\n    };\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (event) => {\r\n    const countryCode = event.target.value;\r\n    setCountry(countryCode);\r\n\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    await fetch(url)\r\n    .then(response=>response.json())\r\n    .then(data=>{\r\n      setCountryInfo(data)\r\n      if(countryCode===\"worldwide\"){\r\n        setMapCenter([20,-10]);\r\n        setMapZoom(2);\r\n        return;\r\n      }\r\n      setMapZoom(4)\r\n      setMapCenter([data.countryInfo.lat,data.countryInfo.long])\r\n      // console.log(data.countryInfo.long)\r\n    })\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n<div className=\"app__header\">\r\n        {/* Header */}\r\n          <h1 className=\"title\">COVID-19-TRACKER</h1>\r\n          <FormControl className=\"app__dropdown\">\r\n            <Select\r\n              variant=\"outlined\"\r\n              value={country}\r\n              onChange={onCountryChange}\r\n            >\r\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n              {countries.map((country) => {\r\n                return (\r\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n<div className=\"content\">\r\n  {/* Stats */}\r\n  <div className=\"app__stats app__left\">\r\n          <InfoBox\r\n            isRed\r\n            active={casesType==\"cases\"}\r\n            title=\"Coronavirus Cases\"\r\n            total={countryInfo.cases}\r\n            cases={countryInfo.todayCases}\r\n            onClick={e=>setCasesType('cases')}\r\n          />\r\n\r\n          <InfoBox\r\n            active={casesType==\"recovered\"}\r\n            title=\"Recovered\"\r\n            total={countryInfo.recovered}\r\n            cases={countryInfo.todayRecovered}\r\n            onClick={e=>setCasesType('recovered')}\r\n          />\r\n\r\n          <InfoBox\r\n            isRed\r\n            active={casesType==\"deaths\"}\r\n            title=\"Deaths\"\r\n            total={countryInfo.deaths}\r\n            cases={countryInfo.todayDeaths}\r\n            onClick={e=>setCasesType('deaths')}\r\n          />\r\n        </div>\r\n  <div className=\"app__mid\">\r\n        {/* News Displai */}\r\n        <h2 class=\"news\">News</h2>\r\n        {/* <News/> */}\r\n        {/* Map Component */}\r\n        <Map countries={mapCountries} center={mapCenter}\r\n         zoom={mapZoom} casesType={casesType}/>\r\n      </div>    \r\n  <Card className=\"app__right\">\r\n        <CardContent>\r\n          <div class=\"app__information\">\r\n            {/* Table */}\r\n            <h3>Lives Cases by Country</h3>\r\n            <Table countries={tableData} />\r\n            {/* Graph */}\r\n            <h3>Worldwide new {casesType}</h3>\r\n            <LineGraph casesType={casesType}/>\r\n          </div>\r\n        </CardContent>\r\n  </Card>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\"\nimport App from \"./App.js\"\n\n\nReactDOM.render(<App/>, document.getElementById(\"root\")); \n\n"],"sourceRoot":""}